AWSTemplateFormatVersion: '2010-09-09'
Description: MediaWiki VPC
Parameters:
  VpcCidr:
    Type: String
    Description: VPC IPv4 Cidr block
    Default: 10.0.0.0/16
Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-Vpc"
  Ipv6Cidr:
    Type: AWS::EC2::VPCCidrBlock
    Properties:
      VpcId: !Ref Vpc
      AmazonProvidedIpv6CidrBlock: true
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-InternetGateway"
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway
  EgressOnlyGateway:
    Type: AWS::EC2::EgressOnlyInternetGateway
    DependsOn: Ipv6Cidr
    Properties:
      VpcId: !Ref Vpc
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn: Ipv6Cidr
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: ''
      CidrBlock: !Select
        - 0
        - !Cidr
          - !GetAtt Vpc.CidrBlock
          - 6
          - 13
      Ipv6CidrBlock: !Select
        - 0
        - !Cidr
          - !Select
            - 0
            - !GetAtt Vpc.Ipv6CidrBlocks
          - 6
          - 64
      MapPublicIpOnLaunch: true
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: true
        EnableResourceNameDnsAAAARecord: true
        HostnameType: resource-name
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PublicSubnet1"
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn: Ipv6Cidr
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: ''
      CidrBlock: !Select
        - 1
        - !Cidr
          - !GetAtt Vpc.CidrBlock
          - 6
          - 13
      Ipv6CidrBlock: !Select
        - 1
        - !Cidr
          - !Select
            - 0
            - !GetAtt Vpc.Ipv6CidrBlocks
          - 6
          - 64
      AssignIpv6AddressOnCreation: true
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: true
        EnableResourceNameDnsAAAARecord: true
        HostnameType: resource-name
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PrivateSubnet1"
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    DependsOn: Ipv6Cidr
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: ''
      CidrBlock: !Select
        - 2
        - !Cidr
          - !GetAtt Vpc.CidrBlock
          - 6
          - 13
      Ipv6CidrBlock: !Select
        - 2
        - !Cidr
          - !Select
            - 0
            - !GetAtt Vpc.Ipv6CidrBlocks
          - 6
          - 64
      MapPublicIpOnLaunch: true
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: true
        EnableResourceNameDnsAAAARecord: true
        HostnameType: resource-name
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PublicSubnet2"
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    DependsOn: Ipv6Cidr
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: ''
      CidrBlock: !Select
        - 3
        - !Cidr
          - !GetAtt Vpc.CidrBlock
          - 6
          - 13
      Ipv6CidrBlock: !Select
        - 3
        - !Cidr
          - !Select
            - 0
            - !GetAtt Vpc.Ipv6CidrBlocks
          - 6
          - 64
      AssignIpv6AddressOnCreation: true
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: true
        EnableResourceNameDnsAAAARecord: true
        HostnameType: resource-name
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PrivateSubnet2"
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    DependsOn: Ipv6Cidr
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: ''
      CidrBlock: !Select
        - 4
        - !Cidr
          - !GetAtt Vpc.CidrBlock
          - 6
          - 13
      Ipv6CidrBlock: !Select
        - 4
        - !Cidr
          - !Select
            - 0
            - !GetAtt Vpc.Ipv6CidrBlocks
          - 6
          - 64
      MapPublicIpOnLaunch: true
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: true
        EnableResourceNameDnsAAAARecord: true
        HostnameType: resource-name
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PublicSubnet3"
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    DependsOn: Ipv6Cidr
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: ''
      CidrBlock: !Select
        - 5
        - !Cidr
          - !GetAtt Vpc.CidrBlock
          - 6
          - 13
      Ipv6CidrBlock: !Select
        - 5
        - !Cidr
          - !Select
            - 0
            - !GetAtt Vpc.Ipv6CidrBlocks
          - 6
          - 64
      AssignIpv6AddressOnCreation: true
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: true
        EnableResourceNameDnsAAAARecord: true
        HostnameType: resource-name
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PrivateSubnet3"
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: Ipv6Cidr
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PublicRouteTable"
  PublicRouteIpv4:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicRouteIpv6:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationIpv6CidrBlock: '::/0'
      GatewayId: !Ref InternetGateway
  PublicSubnet1RouteAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  PublicSubnet2RouteAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
  PublicSubnet3RouteAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet3
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    DependsOn: Ipv6Cidr
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PrivateRouteTable1"
  PrivateRoute1Ipv6:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationIpv6CidrBlock: '::/0'
      EgressOnlyInternetGatewayId: !Ref EgressOnlyGateway
  PrivateSubnet1RouteAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    DependsOn: Ipv6Cidr
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PrivateRouteTable2"
  PrivateRoute2Ipv6:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationIpv6CidrBlock: '::/0'
      EgressOnlyInternetGatewayId: !Ref EgressOnlyGateway
  PrivateSubnet2RouteAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2
  PrivateRouteTable3:
    Type: AWS::EC2::RouteTable
    DependsOn: Ipv6Cidr
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PrivateRouteTable3"
  PrivateRoute3Ipv6:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable3
      DestinationIpv6CidrBlock: '::/0'
      EgressOnlyInternetGatewayId: !Ref EgressOnlyGateway
  PrivateSubnet3RouteAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable3
      SubnetId: !Ref PrivateSubnet3
  S3VpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref Vpc
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.s3"
      VpcEndpointType: Gateway
      RouteTableIds:
        - !Ref PrivateRouteTable1
        - !Ref PrivateRouteTable2
        - !Ref PrivateRouteTable3